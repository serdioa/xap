/*
 * Copyright (c) 2008-2016, GigaSpaces Technologies, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.gigaspaces.blueprints.samples;

import com.gigaspaces.document.SpaceDocument;
import com.gigaspaces.metadata.SpaceTypeDescriptor;
import com.gigaspaces.metadata.SpaceTypeDescriptorBuilder;
import com.gigaspaces.metadata.index.SpaceIndexType;

/**
 * This class was auto-generated by GigaSpaces
 */
public class EmployeeDocument extends SpaceDocument {

    private static final long serialVersionUID = 1L;
    private static final String COMPANYDB_COMPANYSCHEMA_EMPLOYEE = "companyDb_companySchema_Employee";
    private static final String EMPLOYEEID = "employeeId";
    private static final String NAME = "name";
    private static final String AGE = "age";


    public EmployeeDocument() {
        super(COMPANYDB_COMPANYSCHEMA_EMPLOYEE);
    }

    public static SpaceTypeDescriptor getTypeDescriptor() {
        return new SpaceTypeDescriptorBuilder(COMPANYDB_COMPANYSCHEMA_EMPLOYEE)
                .broadcast(false)
                .documentWrapperClass(EmployeeDocument.class)
                .binaryStorage()
                .addFixedProperty(EMPLOYEEID, Long.class)
                .idProperty(EMPLOYEEID, false, SpaceIndexType.EQUAL)
                .addFixedProperty(NAME, String.class)
                .addPropertyIndex(NAME, SpaceIndexType.EQUAL)
                .addFixedProperty(AGE, Integer.class)
                .routingProperty(AGE, SpaceIndexType.EQUAL_AND_ORDERED)
                .create();
    }

    public Long getEmployeeId() {
        return getProperty(EMPLOYEEID);
    }

    public void setEmployeeId(Long employeeId) {
        setProperty(EMPLOYEEID, employeeId);
    }

    public String getName() {
        return getProperty(NAME);
    }

    public void setName(String name) {
        setProperty(NAME, name);
    }

    public Integer getAge() {
        return getProperty(AGE);
    }

    public void setAge(Integer age) {
        setProperty(AGE, age);
    }


    @Override
    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (obj == null)
            return false;
        if (!(obj instanceof EmployeeDocument))
            return false;

        EmployeeDocument other = (EmployeeDocument) obj;
        if (!this.getEmployeeId().equals(other.getEmployeeId())) {
            return false;
        }
        if (!this.getName().equals(other.getName())) {
            return false;
        }
        if (!this.getAge().equals(other.getAge())) {
            return false;
        }
        return true;
    }

}
