package com.gigaspaces.dih;

import com.gigaspaces.dih.consumer.web.PipelineConsumerServlet;
import com.gigaspaces.dih.model.PipelineTypeRegistrar;
import org.openspaces.core.GigaSpace;
import org.openspaces.core.GigaSpaceConfigurer;
import org.openspaces.core.cluster.ClusterInfo;
import org.openspaces.core.space.SpaceProxyConfigurer;
import javax.servlet.ServletContext;

/**
 * This class was auto-generated by GigaSpaces
 */
public class {{project.consumer-name}}PipelineConsumerServlet extends PipelineConsumerServlet {

    private static final long serialVersionUID = 8216313915439061676L;

    @Override
    public void registerTypes(GigaSpace gigaSpace) {
        PipelineTypeRegistrar.registerTypes(gigaSpace);
    }

    @Override
    public String getPuName() {
        return ((ClusterInfo) getServletContext().getAttribute("clusterInfo")).getName();
    }

    /**
     * Should resolve Space using ServletContext defined in the pu.xml, else it will resolve it manually from the spaceName
     */
    @Override
    protected GigaSpace getSpace(ServletContext servletContext, String spaceName) {
        GigaSpace gigaSpace = (GigaSpace) servletContext.getAttribute("gigaSpace");
        if (gigaSpace == null) {
            gigaSpace = new GigaSpaceConfigurer(new SpaceProxyConfigurer(spaceName)).create();
        }
        return gigaSpace;
    }
}